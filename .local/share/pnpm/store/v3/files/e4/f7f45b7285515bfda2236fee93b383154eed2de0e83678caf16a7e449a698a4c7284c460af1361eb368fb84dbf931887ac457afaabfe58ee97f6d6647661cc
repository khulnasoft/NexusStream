import { fixBlankFiles as _fixBlankFiles, fixContents as _fixContents, fixDefaultExport as _fixDefaultExport, fixDirnameVar as _fixDirnameVar, fixFilenameVar as _fixFilenameVar, fixModuleReferences as _fixModuleReferences, fixSourceMapRef as _fixSourceMapRef, } from './fixes/index.mjs';
export const fixModuleReferences = (contents, filename, filenames, cwd, ignore) => _fixModuleReferences({ contents, filename, filenames, options: { cwd }, ignore }).contents;
export const fixDirnameVar = (contents, isSource) => _fixDirnameVar({ contents, isSource }).contents;
export const fixFilenameVar = (contents, isSource) => _fixFilenameVar({ contents, isSource }).contents;
export const fixDefaultExport = (contents) => _fixDefaultExport({ contents }).contents;
export const fixBlankFiles = (contents) => _fixBlankFiles({ contents }).contents;
export const fixSourceMapRef = (contents, originName, filename) => _fixSourceMapRef({ contents, originName, filename }).contents;
export const fixContents = (contents, filename, filenames, options, originName = filename, // NOTE Weird contract to avoid breaking change
isSource = false, ignore = []) => _fixContents({ contents, filename, filenames, options, originName, isSource, ignore }).contents;
